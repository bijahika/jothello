/*
 * GameFrame.java
 *
 * Created on November 13, 2008, 2:26 PM
 */

package mmtothello;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

/**
 *
 * @author  mocksuwannatat
 */
public class GameFrame extends javax.swing.JFrame {
  
  /** Creates new form GameFrame */
  public GameFrame() {
    initComponents();
    initLogic();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    bNum = new javax.swing.JLabel();
    wNum = new javax.swing.JLabel();
    jSpinner1 = new javax.swing.JSpinner();
    jLabel3 = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jComboBox1 = new javax.swing.JComboBox();
    jComboBox2 = new javax.swing.JComboBox();
    pnlBoard = new javax.swing.JPanel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jLabel1.setText("number of BLACKS:");

    jLabel2.setText("number of WHITES:");

    bNum.setText("0");

    wNum.setText("0");

    jLabel3.setText("table size:");

    jButton1.setText("new game");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    jLabel4.setText("BLACK's thinker:");

    jLabel5.setText("WHITE's thinker:");

    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    pnlBoard.setBackground(new java.awt.Color(255, 204, 153));

    org.jdesktop.layout.GroupLayout pnlBoardLayout = new org.jdesktop.layout.GroupLayout(pnlBoard);
    pnlBoard.setLayout(pnlBoardLayout);
    pnlBoardLayout.setHorizontalGroup(
      pnlBoardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(0, 448, Short.MAX_VALUE)
    );
    pnlBoardLayout.setVerticalGroup(
      pnlBoardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(0, 224, Short.MAX_VALUE)
    );

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(layout.createSequentialGroup()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
              .add(layout.createSequentialGroup()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bNum))
              .add(layout.createSequentialGroup()
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(wNum)))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 148, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
              .add(layout.createSequentialGroup()
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSpinner1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
              .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
          .add(layout.createSequentialGroup()
            .add(jLabel4)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
          .add(layout.createSequentialGroup()
            .add(jLabel5)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
      .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlBoard, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel1)
          .add(bNum)
          .add(jSpinner1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
          .add(jLabel3))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(wNum)
          .add(jButton1)
          .add(jLabel2))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel4)
          .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel5)
          .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(pnlBoard, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
  newGame();
}//GEN-LAST:event_jButton1ActionPerformed
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new GameFrame().setVisible(true);
      }
    });
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel bNum;
  private javax.swing.JButton jButton1;
  private javax.swing.JComboBox jComboBox1;
  private javax.swing.JComboBox jComboBox2;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JSpinner jSpinner1;
  private javax.swing.JPanel pnlBoard;
  private javax.swing.JLabel wNum;
  // End of variables declaration//GEN-END:variables

  private void initLogic() {
    size = C.DEFAULT_DIMENSION;
    board = new OBoard(size);
    createPieces();
  }
  
  private void createPieces() {
    pnlBoard.setLayout(new GridLayout(size, size));
    buttons = new JButton[size][size];
    for (int r = 0; r<size; r++) {
      for (int c = 0; c<size; c++) {
        char who = board.get(r, c);
        JButton button = new JButton(""+who);
        //button.add
        //TODO add event handler to button
        final int rr = r; 
        final int cc = c;
        button.addActionListener(new ActionListener() {
          public void actionPerformed(ActionEvent evt) {
            userClickedAtCell(rr, cc);
          }
        });
        
        buttons[r][c] = button;
        pnlBoard.add(button);
      }
    }
  }
  
  private void redrawBoard() {
    for (int r = 0; r<size; r++) {
      for (int c = 0; c<size; c++) {
        char who = board.get(r, c);
        buttons[r][c].setText(""+ who);
      }
    }
  }
  
  private void userClickedAtCell(int r, int c) {
    char old = board.get(r, c);
    char p = getPlayer();
    if (!board.canSet(r, c, p)) {
      System.out.println("Grrr! can't put it there.");
      return;
    }
    switchPlayer();
    board.set(r, c, p);
    board.flipAll(r, c);
    redrawBoard();
    //buttons[r][c].setText(""+ p);
  }
  
  private void switchPlayer() {
    whiteTurn = !whiteTurn;
  }
  private char getPlayer() {
    return whiteTurn ? C.WHITE : C.BLACK;
  }
  
  private void newGame() {
    //TODO - user clicked on New Game button
    board.clear();
    whiteTurn = true;
    redrawBoard();
  }
  
  private int size;
  private OBoard board = null;
  private JButton[][] buttons;
  private boolean whiteTurn = true;
  
}
